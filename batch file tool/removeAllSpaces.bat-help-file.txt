
Author of help file:    James Marion Lynch has been programming IBM PC Compatible computers for over 30-years.

Help file for batch file named: removeAllSpaces.bat

Hello world, I got this batch file program from:

Goto -->   https://stackoverflow.com/questions/11270453/how-to-remove-spaces-from-file-names-in-bulk/11278987#11278987

Below is cut and pasted and modded some from above site on 01-06-2021 by me, James M. Lynch.

Purpose of bat file, removes all blank spaces from filename in a folder.

Try it out on a copy of test files to see for yourself.




You may also use different arguments or switches with the batch file command;

removeAllSpaces /R D:\Test



Example usage:

removeAllSpaces                     removes blank spaces from files in the current directory / folder where removeAllSpaces.bat is located.

removeAllSpaces /R                  removes all spaces from all sub-folders filenames also.

removeAllSpaces D:\Test             removes all spaces from the D:\Test directory / folder.


If your folder path contains spaces (for example, D:\Test Folder), you may want to use the same command with quotation marks.

removeAllSpaces “D:\Test Folder”

If you want to rename files from all the sub-folders located inside D:\TestFolder, use 

removeAllSpaces /R D:\TestFolder

batch file text starts on line 50 below.









REM start of batch file.
REM is an old MS-DOS batch file command from the first days of Microsofts MS-DOS operating system. REM = Remark to other programmers.
REM filename:       removeAllSpaces.bat
REM cmd.exe runs all *.bat files.


@echo off

setlocal disableDelayedExpansion

if /i "%~1"=="/R" (
  set "forOption=%~1 %2"
  set "inPath="
) else (
  set "forOption="
  
REM neq = not equal to
REM if you passed the batch file program a directory and is not equal to nothing ("").
REM it sets the inPath (input path) directory you passed in to it else sets inPath to nothing.
  
  if "%~1" neq "" (set "inPath=%~1\") else set "inPath="
)

for %forOption% %%F in ("%inPath%* *") do (
  if /i "%~f0" neq "%%~fF" (
    set "folder=%%~dpF"
    set "file=%%~nxF"
    setlocal enableDelayedExpansion
    echo ren "!folder!!file!" "!file: =!"
    ren "!folder!!file!" "!file: =!"
    endlocal
  )
)

REM end of file









Assume the script is called removeAllSpaces.bat

removeAllSpaces : (no arguments) Renames files in the current directory

removeAllSpaces /R : Renames files in the folder tree rooted at the current directory

removeAllSpaces myFolder : Renames files in the "myFolder" directory found in the current directory.

removeAllSpaces "c:\my folder\" : Renames files in the specified path. Quotes are used because path contains a space.

removeAllSpaces /R c:\ : Renames all files on the C: drive.








Use Windows PowerShell
You can also use the PowerShell commands to remove spaces from filenames. 
Windows PowerShell is a complex command-line tool that acts as an automated task framework and a scripting language for advanced Windows users.

Click on Start and type PowerShell in the Search box.

Right-click Windows PowerShell, and select Run as administrator.

Use the following command to set your active directory to:

CD D:\Test

Execute the following command to rename your files in bulk.






File Explorer (previously known as Windows Explorer) does not support the automatic renaming of files. 
However, sorting your files in alphabetical order and using keyboard shortcuts to rename files is a very simple task. Here’s how:

Open File Explorer.

Navigate to the directory that contains the files you need to rename.

Click the View menu and select the List option.

Right-click on an empty area of the File Explorer, point to Sort by and select Name.

Your files will now be sorted in alphabetical order.

Select the topmost file and press the F2 key to rename it.

Now type the name of your choice and press Enter when you’re done.

Press the Tab key to jump to the next file.

Repeat the steps until you’ve renamed all the files.







Software Method

Another way to rename bulk quantities of files is to use the file renaming tools such as the Easy File Renamer program.

The whole renaming job of removing spaces revolves around 5 simple steps:

You add the files you want to rename.

You select the relevant renaming rule (Remove Text) and insert a single space in the Text field.

Selecting the Remove Text Rule and applying the relevant settings



You will now select Remove All (to indicate all spaces in the name to be removed).

You click the Add Rule button.
You click the Rename button in the user interface.
You select Yes in the prompt.

You don’t need to be equipped with any complex technical know-how of PowerShell commands to use this software. 
This is a safe and easy method because entering incorrect commands in PowerShell could possibly cause a lot of harm to your computer system.

